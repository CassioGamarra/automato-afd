

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cassi
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    
    //Define os modelos da tabela
    DefaultTableModel tblTransicoes;
    TableColumn q, entrada, saida;
    JComboBox comboEstados = new JComboBox();
    JComboBox comboAlfabeto = new JComboBox();
    
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        //Define a tabela de transições como uma default table model
        tblTransicoes = (DefaultTableModel) tabelaTransicoes.getModel();
        q = tabelaTransicoes.getColumnModel().getColumn(0);
        entrada = tabelaTransicoes.getColumnModel().getColumn(1);
        saida = tabelaTransicoes.getColumnModel().getColumn(2);
        //Define as celulas das colunas
        q.setCellEditor(new DefaultCellEditor(comboEstados));
        entrada.setCellEditor(new DefaultCellEditor(comboAlfabeto));
        saida.setCellEditor(new DefaultCellEditor(comboEstados));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jLblEstados = new javax.swing.JLabel();
        jTFEstados = new javax.swing.JTextField();
        jLblAlfabeto = new javax.swing.JLabel();
        jTFAlfabeto = new javax.swing.JTextField();
        jComboEstadoInicial = new javax.swing.JComboBox<>();
        jComboEstadoFinal = new javax.swing.JComboBox<>();
        jTFEstadosFinais = new javax.swing.JTextField();
        jLblEstadoInicial = new javax.swing.JLabel();
        jLblEstadoFinal = new javax.swing.JLabel();
        jLblTransicoes = new javax.swing.JLabel();
        jLblEntrada = new javax.swing.JLabel();
        jTFEntrada = new javax.swing.JTextField();
        btnAddEstado = new javax.swing.JButton();
        btnRemoveEstado = new javax.swing.JButton();
        btnAddEstadoFinal = new javax.swing.JButton();
        btnRemoveEstadoFinal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTransicoes = new javax.swing.JTable();
        btnAddTransicaoTabela = new javax.swing.JButton();
        btnRemoveTransicaoTabela = new javax.swing.JButton();
        btnExecutar = new javax.swing.JButton();
        jPanelResultado = new javax.swing.JPanel();
        jLblResultado = new javax.swing.JLabel();
        jLblEntrada1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTxtAreaResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Autômato Finito Determinístico (AFD) - Cássio e Frederico");

        jPanelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        jPanelPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Dados de entrada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLblEstados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblEstados.setText("Estados:");

        jTFEstados.setEditable(false);
        jTFEstados.setBackground(new java.awt.Color(255, 255, 255));

        jLblAlfabeto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblAlfabeto.setText("Alfabeto");

        jTFAlfabeto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFAlfabetoKeyPressed(evt);
            }
        });

        jComboEstadoInicial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));

        jComboEstadoFinal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));

        jLblEstadoInicial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblEstadoInicial.setText("Estado Inicial");

        jLblEstadoFinal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblEstadoFinal.setText("Estado Final");

        jLblTransicoes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblTransicoes.setText("Transições:");

        jLblEntrada.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblEntrada.setText("Fita de entrada:");

        jTFEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFEntradaFocusGained(evt);
            }
        });

        btnAddEstado.setText("+");
        btnAddEstado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEstadoActionPerformed(evt);
            }
        });

        btnRemoveEstado.setText("-");
        btnRemoveEstado.setEnabled(false);
        btnRemoveEstado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoveEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEstadoActionPerformed(evt);
            }
        });

        btnAddEstadoFinal.setText("+");
        btnAddEstadoFinal.setEnabled(false);
        btnAddEstadoFinal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddEstadoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEstadoFinalActionPerformed(evt);
            }
        });

        btnRemoveEstadoFinal.setText("-");
        btnRemoveEstadoFinal.setEnabled(false);
        btnRemoveEstadoFinal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoveEstadoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEstadoFinalActionPerformed(evt);
            }
        });

        tabelaTransicoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "q", "entrada", "saída"
            }
        ));
        tabelaTransicoes.setToolTipText("");
        tabelaTransicoes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaTransicoes);
        if (tabelaTransicoes.getColumnModel().getColumnCount() > 0) {
            tabelaTransicoes.getColumnModel().getColumn(0).setResizable(false);
            tabelaTransicoes.getColumnModel().getColumn(1).setResizable(false);
            tabelaTransicoes.getColumnModel().getColumn(2).setResizable(false);
        }

        btnAddTransicaoTabela.setText("+");
        btnAddTransicaoTabela.setEnabled(false);
        btnAddTransicaoTabela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddTransicaoTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTransicaoTabelaActionPerformed(evt);
            }
        });

        btnRemoveTransicaoTabela.setText("-");
        btnRemoveTransicaoTabela.setEnabled(false);
        btnRemoveTransicaoTabela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoveTransicaoTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTransicaoTabelaActionPerformed(evt);
            }
        });

        btnExecutar.setText("EXECUTAR");
        btnExecutar.setEnabled(false);
        btnExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblAlfabeto)
                            .addComponent(jLblEntrada)
                            .addComponent(btnExecutar))
                        .addGap(0, 465, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTFEntrada, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                .addComponent(jTFEstados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoveEstado))
                            .addComponent(jTFAlfabeto)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPrincipalLayout.createSequentialGroup()
                                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLblEstadoInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboEstadoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                        .addComponent(jLblTransicoes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAddTransicaoTabela)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                        .addComponent(btnRemoveTransicaoTabela)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLblEstadoFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboEstadoFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddEstadoFinal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRemoveEstadoFinal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFEstadosFinais))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPrincipalLayout.createSequentialGroup()
                                .addComponent(jLblEstados)
                                .addGap(0, 500, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblEstados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddEstado)
                    .addComponent(btnRemoveEstado))
                .addGap(18, 18, 18)
                .addComponent(jLblAlfabeto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFAlfabeto, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLblEstadoInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboEstadoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLblEstadoFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboEstadoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFEstadosFinais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddEstadoFinal)
                            .addComponent(btnRemoveEstadoFinal))))
                .addGap(18, 18, 18)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTransicoes)
                    .addComponent(btnAddTransicaoTabela)
                    .addComponent(btnRemoveTransicaoTabela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLblEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExecutar)
                .addGap(4, 4, 4))
        );

        jPanelResultado.setBackground(new java.awt.Color(255, 255, 255));
        jPanelResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Resultado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLblResultado.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLblResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblResultado.setText("RESULTADO");

        jLblEntrada1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLblEntrada1.setText("Transições executadas: ");

        jTxtAreaResultado.setEditable(false);
        jTxtAreaResultado.setColumns(20);
        jTxtAreaResultado.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jTxtAreaResultado.setRows(1);
        jScrollPane3.setViewportView(jTxtAreaResultado);

        javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
        jPanelResultado.setLayout(jPanelResultadoLayout);
        jPanelResultadoLayout.setHorizontalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelResultadoLayout.createSequentialGroup()
                        .addComponent(jLblEntrada1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanelResultadoLayout.setVerticalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addComponent(jLblResultado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblEntrada1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFAlfabetoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFAlfabetoKeyPressed
        // TODO add your handling code here:
        verificarAlfabeto(evt);
    }//GEN-LAST:event_jTFAlfabetoKeyPressed

    private void jTFEntradaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFEntradaFocusGained
        // TODO add your handling code here:
        verificarCampos();
    }//GEN-LAST:event_jTFEntradaFocusGained

    private void btnAddTransicaoTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTransicaoTabelaActionPerformed
        // TODO add your handling code here:
        addTransicaoTabela();
    }//GEN-LAST:event_btnAddTransicaoTabelaActionPerformed

    private void btnRemoveTransicaoTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTransicaoTabelaActionPerformed
        // TODO add your handling code here:
        removeTransicaoTabela();
    }//GEN-LAST:event_btnRemoveTransicaoTabelaActionPerformed

    private void btnExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarActionPerformed
        // TODO add your handling code here:
        executarAutomato();
    }//GEN-LAST:event_btnExecutarActionPerformed

    private void btnAddEstadoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEstadoFinalActionPerformed
        // TODO add your handling code here:
        addEstadoFinal();
    }//GEN-LAST:event_btnAddEstadoFinalActionPerformed

    private void btnRemoveEstadoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEstadoFinalActionPerformed
        // TODO add your handling code here:
        removerEstadoFinal();
    }//GEN-LAST:event_btnRemoveEstadoFinalActionPerformed

    private void btnAddEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEstadoActionPerformed
        // TODO add your handling code here:
        adicionarEstado();
    }//GEN-LAST:event_btnAddEstadoActionPerformed

    private void btnRemoveEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEstadoActionPerformed
        // TODO add your handling code here:
        removerEstado();
    }//GEN-LAST:event_btnRemoveEstadoActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    //Variaveis criadas
    private String estadoInicial;
    private String fitaEntrada;
    
    //Variaveis inicializadas, o uso de linked list facilida para adicionar ou remover estados
    private LinkedList<String> estados = new LinkedList<String>();
    private LinkedList<String> estadosFinais = new LinkedList<String>();
    private LinkedList<String> alfabeto = new LinkedList<String>();
    private int contador = 0;
    
    //Métodos
    //Adicionar um estado
    private void adicionarEstado(){
        estados.add("Q"+contador); //Adiciona um estado Q com um contador que incrementa
        jTFEstados.setText(estados.toString().replace("[", "").replace("]", "")); //Remove os [ ] da exibição ao converter a lista para string
        //Adiciona o estado nos combos
        jComboEstadoInicial.addItem(estados.get(contador)); 
        jComboEstadoFinal.addItem(estados.get(contador));
        comboEstados.addItem(estados.get(contador));
        contador++; //Incrementa o contador
        
        //Ativa os botões para a tabela
        btnAddTransicaoTabela.setEnabled(true);
        btnAddEstadoFinal.setEnabled(true);
        btnRemoveEstado.setEnabled(true);
    }
    //Remover um estado
    private void removerEstado(){
        if((estados.size() > 0) && (tabelaTransicoes.getRowCount() >= 0)){ //Verifica o tamanho da lista
            estados.removeLast(); //Remove o ultimo item da lista
            //Remove o item dos combos
            jComboEstadoInicial.removeItemAt(contador);
            jComboEstadoFinal.removeItemAt(contador);
            comboEstados.removeItemAt(contador-1);
            contador--; //Decrementa o contador
            if(estados.isEmpty()){
                btnAddTransicaoTabela.setEnabled(false);
                btnRemoveTransicaoTabela.setEnabled(false);
                btnAddEstadoFinal.setEnabled(false);
                btnRemoveEstado.setEnabled(false);
                cleanJTable(tabelaTransicoes);
            }
        }
        jTFEstados.setText(removerCaractere(estados.toString())); //Remove os [ ] da exibição ao converter a lista para string
    }
    //Adiciona um estado final
    private void addEstadoFinal(){
        if(!jComboEstadoFinal.getSelectedItem().toString().equals("Selecione")){
            estadosFinais.add(jComboEstadoFinal.getSelectedItem().toString()); //Adiciona um valor do combo para a lista de estados finais
            btnRemoveEstadoFinal.setEnabled(true);
        }
        jTFEstadosFinais.setText(removerCaractere(estadosFinais.toString())); //Remove os [ ] da exibição ao converter a lista para string
    }
    //Remove um estado final
    private void removerEstadoFinal(){
        if(estadosFinais.size() > 0){ //Verifica se existem estados finais
            estadosFinais.remove(jComboEstadoFinal.getSelectedItem().toString());
            jTFEstadosFinais.setText(removerCaractere(estadosFinais.toString())); //Remove os [ ] da exibição ao converter a lista para string
            if(estadosFinais.isEmpty()){
                btnRemoveEstadoFinal.setEnabled(false);
            }
        }
    }
    //Verificar as letras digitadas no alfabeto
    private void verificarAlfabeto(java.awt.event.KeyEvent evt){
        /*
        * Nesse método foram combinados os métodos getKeyCode() e getKeyChar() para montar o alfabeto da linguagem.
        * o getKeyCode() para verificar a "," e os números e o getKeyChar para armazenar na lista
        */
        if(evt.getKeyCode() != 44){ //Verifica se não é uma virgula
            String aux = String.valueOf(evt.getKeyChar()); //String auxiliar para receber o caractere
            //Para apagar com o backspace
            if((alfabeto.size() > 0)&&(evt.getKeyChar() == 8)){ //Verifica se o tamanho do alfabeto é maior que 0 e se a tecla backspace foi acionada
                if(!jTFAlfabeto.getText().endsWith(",")){//Se o caractere não for uma virgula, remove
                    alfabeto.removeLast();
                    comboAlfabeto.removeItemAt(comboAlfabeto.getItemCount() - 1);
                }
            }
            //Veriica se foram digitadas letras ou números e adiciona na lista
            if((evt.getKeyCode() >= KeyEvent.VK_A  && evt.getKeyCode() <= KeyEvent.VK_Z) || (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57) || (evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105)){
                if(alfabeto.contains(String.valueOf(evt.getKeyChar()))){
                    JOptionPane.showMessageDialog(null, "Por favor, não repita as letras do alfabeto.", "Mensagem de aviso", JOptionPane.WARNING_MESSAGE);
                    evt.setKeyCode(8);
                }
                else{
                    alfabeto.add(aux);
                    comboAlfabeto.addItem(aux);
                }
            }
        }
    }
    //Adiciona uma transição na tabela
    private void addTransicaoTabela(){
        tblTransicoes.addRow(new Object[]{"", "", ""});
        btnRemoveTransicaoTabela.setEnabled(true);
    }
    //Remove uma transição da tabela
    private void removeTransicaoTabela(){
        if(tblTransicoes.getRowCount() > 0) {
            tblTransicoes.removeRow(tblTransicoes.getRowCount()-1);
            if(tblTransicoes.getRowCount() == 0){
                btnRemoveTransicaoTabela.setEnabled(false);
            }
        }
    }
    
    //Método que verifica os campos e ativa o botão de executar
    private void verificarCampos(){
        //Verifica se os campos estão preenchidos
        if((!estados.isEmpty()) && (!alfabeto.isEmpty()) && (!estadosFinais.isEmpty()) && tblTransicoes.getRowCount() != 0){
            btnExecutar.setEnabled(true);
        }
    }
    
    //Remover [ ] 
    private String removerCaractere(String s){
        s = s.replace("[", "").replace("]", "");
        return s;
    }
    //Método para limpar tabelas
    public void cleanJTable(JTable table){
        DefaultTableModel tblRemove = (DefaultTableModel)table.getModel();
        int i, count;
        
        count = tblRemove.getRowCount();
        //Verifica se o número de linhas é maior que 0
        if (tblRemove.getRowCount() > 0){
            for (i = 0; i < count; i++){
                tblRemove.removeRow(0);
            }    
        }
    }
    
    //Método que executa o automato
    private void executarAutomato(){
        if(jTFEntrada.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Entrada vazia!", "Mensagem de aviso", JOptionPane.WARNING_MESSAGE);
        }
        else{
            fitaEntrada = jTFEntrada.getText();
            estadoInicial = jComboEstadoInicial.getSelectedItem().toString();
            jTxtAreaResultado.setText("");
            
            int i, tamanhoTabela;
            
            tamanhoTabela = tblTransicoes.getRowCount();
            // Autômato executando
            String estadoAtual = estadoInicial;
            jTxtAreaResultado.append(estadoAtual);
            for (i = 0; i < fitaEntrada.length(); i++) {
                // Encontra o próximo estado
                estadoAtual = proximoEstado(estadoAtual, fitaEntrada.substring(i,i+1), tamanhoTabela); 
                jTxtAreaResultado.append(" -> " + estadoAtual);
            }
            
            if (estadoFinal(estadoAtual)){
                jLblResultado.setForeground(Color.GREEN);
                jLblResultado.setText("Entrada Aceita!");
            }
            else{
                jLblResultado.setForeground(Color.RED);
                jLblResultado.setText("Entrada rejeitada!");
            }
        }
    }
    
    //Avança para o próximo estado
    private String proximoEstado(String p1, String p2, int qtdLinhas) {
        int i;
        String s = null;
        // Encontra uma entrada na tabela de transição de estados
        for (i=0; i < qtdLinhas; i++) {
            if (tabelaTransicoes.getValueAt(i,0).toString().equals(p1) && tabelaTransicoes.getValueAt(i,1).toString().equals(p2)) {
                s = tabelaTransicoes.getValueAt(i,2).toString();
                break;
            }
        }
        return s;
    }
    
    //Verifica o estado final
    private boolean estadoFinal(String s) {
        int i;     
        // Verifica se o estado final é um dos estados finais do autômato
        for (i = 0; i < estadosFinais.size(); i++){
            if (estadosFinais.get(i).equals(s)){
                return true;
            } 
        }
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEstado;
    private javax.swing.JButton btnAddEstadoFinal;
    private javax.swing.JButton btnAddTransicaoTabela;
    private javax.swing.JButton btnExecutar;
    private javax.swing.JButton btnRemoveEstado;
    private javax.swing.JButton btnRemoveEstadoFinal;
    private javax.swing.JButton btnRemoveTransicaoTabela;
    private javax.swing.JComboBox<String> jComboEstadoFinal;
    private javax.swing.JComboBox<String> jComboEstadoInicial;
    private javax.swing.JLabel jLblAlfabeto;
    private javax.swing.JLabel jLblEntrada;
    private javax.swing.JLabel jLblEntrada1;
    private javax.swing.JLabel jLblEstadoFinal;
    private javax.swing.JLabel jLblEstadoInicial;
    private javax.swing.JLabel jLblEstados;
    private javax.swing.JLabel jLblResultado;
    private javax.swing.JLabel jLblTransicoes;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelResultado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTFAlfabeto;
    private javax.swing.JTextField jTFEntrada;
    private javax.swing.JTextField jTFEstados;
    private javax.swing.JTextField jTFEstadosFinais;
    private javax.swing.JTextArea jTxtAreaResultado;
    private javax.swing.JTable tabelaTransicoes;
    // End of variables declaration//GEN-END:variables
}
